spring:
  application:
    name: Ecommerce-Graybee
  config:
    import: optional:file:.env[.properties]
  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}?useSSL=true&serverTimezone=Asia/Ho_Chi_Minh
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        jdbc:
          batch_size: 20
          order_insert: true
          order_update: true
  output:
    ansi:
      enabled: always
  cache:
    type: redis
  data:
    redis:
      repositories:
        enabled: false
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      database: ${REDIS_DATABASE}
    elasticsearch:
      repositories:
        enabled: false
      uris: http://${ELS_HOST}:9200
  #      username: elastic
  #      password: admin123
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

server:
  address: 0.0.0.0
  port: 8080

servlet:
  multipart:
    enabled: true
    max-file-size: 10MB
    max-request-size: 10MB

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.web.access.ExceptionTranslationFilter: ERROR
    com:
      zaxxer: ERROR

api:
  publicApi:
    base: /api/v1/public
    home: ${api.publicApi.base}/home
    auth: ${api.publicApi.base}/auth
    carts: ${api.publicApi.base}/carts
    collections: ${api.publicApi.base}/collections
    products: ${api.publicApi.base}/products
    orders: ${api.publicApi.base}/orders
    search: ${api.publicApi.base}/search
  adminApi:
    base: /api/v1/admin
    auth: ${api.adminApi.base}/auth
    products: ${api.adminApi.base}/products
    categories: ${api.adminApi.base}/categories
    attributes: ${api.adminApi.base}/attributes
    orders: ${api.adminApi.base}/orders
    inventories: ${api.adminApi.base}/inventories
    permissions: ${api.adminApi.base}/permissions
    imageKit: ${api.adminApi.base}/image-kit
  privateApi:
    account: /api/v1/account
    profile: ${api.privateApi.account}/profile
    address: ${api.privateApi.account}/addresses
    favorites: ${api.privateApi.account}/favorites

jwt:
  adminSecretKey: ${ADMIN_SECRET_KEY}
  adminExpiration: ${ADMIN_EXPIRATION}
  customerSecretKey: ${CUSTOMER_SECRET_KEY}
  customerExpiration: ${CUSTOMER_EXPIRATION}
  header: ${HEADER}
  prefix: ${PREFIX}