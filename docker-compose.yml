services:
  # Redis + Redis Insight
  redis:
    image: redis:7.4.1
    container_name: redis
    restart: always
    volumes:
      - redis_volume:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 15s
      timeout: 5s
      retries: 3
    env_file:
      - .env
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    networks:
      - techstore
  redis_insight:
    image: redislabs/redisinsight:1.14.0
    container_name: redisInsight
    restart: always
    ports:
      - "5000:8001"
    volumes:
      - redisInsight_volume:/db
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - techstore

  # MySQL
  mysql:
    image: mysql:8.0.40
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - mysql_volume:/var/lib/mysql
      - ./db-init:/docker-entrypoint-initdb.d
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 15s
      timeout: 5s
      retries: 3
    networks:
      - techstore

  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:8.15.0
    restart: always
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_volume:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    healthcheck:
      test: [ "CMD", "curl", "-s", "-f", "http://localhost:9200/_cluster/health" ]
      interval: 15s
      timeout: 5s
      retries: 3
    networks:
      - techstore

  kibana:
    container_name: kibana
    image: kibana:8.15.0
    restart: always
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - techstore

  # Spring Boot App
  techstore:
    build:
      context: .
      dockerfile: dockerfile
    image: techstore-server:latest
    container_name: techstore-server
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - techstore
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
networks:
  techstore:
    driver: bridge
    external: true
volumes:
  redis_volume:
    external: true
  redisInsight_volume:
    external: true
  mysql_volume:
    external: true
  elasticsearch_volume:
    external: true


